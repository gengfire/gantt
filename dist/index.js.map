{"version":3,"file":"index.js","sources":["../src/date_utils.js","../src/svg_utils.js","../src/bar.js","../src/arrow.js","../src/popup.js","../src/index.js"],"sourcesContent":["const YEAR = 'year';\nconst MONTH = 'month';\nconst DAY = 'day';\nconst HOUR = 'hour';\nconst MINUTE = 'minute';\nconst SECOND = 'second';\nconst MILLISECOND = 'millisecond';\n\nconst month_names = {\n    en: [\n        'January',\n        'February',\n        'March',\n        'April',\n        'May',\n        'June',\n        'July',\n        'August',\n        'September',\n        'October',\n        'November',\n        'December'\n    ],\n    es: [\n        'Enero',\n        'Febrero',\n        'Marzo',\n        'Abril',\n        'Mayo',\n        'Junio',\n        'Julio',\n        'Agosto',\n        'Septiembre',\n        'Octubre',\n        'Noviembre',\n        'Diciembre'\n    ],\n    ru: [\n        'Январь',\n        'Февраль',\n        'Март',\n        'Апрель',\n        'Май',\n        'Июнь',\n        'Июль',\n        'Август',\n        'Сентябрь',\n        'Октябрь',\n        'Ноябрь',\n        'Декабрь'\n    ],\n    ptBr: [\n        'Janeiro',\n        'Fevereiro',\n        'Março',\n        'Abril',\n        'Maio',\n        'Junho',\n        'Julho',\n        'Agosto',\n        'Setembro',\n        'Outubro',\n        'Novembro',\n        'Dezembro'\n    ],\n    fr: [\n        'Janvier',\n        'Février',\n        'Mars',\n        'Avril',\n        'Mai',\n        'Juin',\n        'Juillet',\n        'Août',\n        'Septembre',\n        'Octobre',\n        'Novembre',\n        'Décembre'\n    ],\n    tr: [\n        'Ocak',\n        'Şubat',\n        'Mart',\n        'Nisan',\n        'Mayıs',\n        'Haziran',\n        'Temmuz',\n        'Ağustos',\n        'Eylül',\n        'Ekim',\n        'Kasım',\n        'Aralık'\n    ],\n    zh: [\n        '一月',\n        '二月',\n        '三月',\n        '四月',\n        '五月',\n        '六月',\n        '七月',\n        '八月',\n        '九月',\n        '十月',\n        '十一月',\n        '十二月'\n    ]\n};\n\nexport default {\n    parse(date, date_separator = '-', time_separator = /[.:]/) {\n        if (date instanceof Date) {\n            return date;\n        }\n        if (typeof date === 'string') {\n            let date_parts, time_parts;\n            const parts = date.split(' ');\n\n            date_parts = parts[0]\n                .split(date_separator)\n                .map(val => parseInt(val, 10));\n            time_parts = parts[1] && parts[1].split(time_separator);\n\n            // month is 0 indexed\n            date_parts[1] = date_parts[1] - 1;\n\n            let vals = date_parts;\n\n            if (time_parts && time_parts.length) {\n                if (time_parts.length == 4) {\n                    time_parts[3] = '0.' + time_parts[3];\n                    time_parts[3] = parseFloat(time_parts[3]) * 1000;\n                }\n                vals = vals.concat(time_parts);\n            }\n\n            return new Date(...vals);\n        }\n    },\n\n    to_string(date, with_time = false) {\n        if (!(date instanceof Date)) {\n            throw new TypeError('Invalid argument type');\n        }\n        const vals = this.get_date_values(date).map((val, i) => {\n            if (i === 1) {\n                // add 1 for month\n                val = val + 1;\n            }\n\n            if (i === 6) {\n                return padStart(val + '', 3, '0');\n            }\n\n            return padStart(val + '', 2, '0');\n        });\n        const date_string = `${vals[0]}-${vals[1]}-${vals[2]}`;\n        const time_string = `${vals[3]}:${vals[4]}:${vals[5]}.${vals[6]}`;\n\n        return date_string + (with_time ? ' ' + time_string : '');\n    },\n\n    format(date, format_string = 'YYYY-MM-DD HH:mm:ss.SSS', lang = 'en') {\n        const values = this.get_date_values(date).map(d => padStart(d, 2, 0));\n        const format_map = {\n            YYYY: values[0],\n            MM: padStart(+values[1] + 1, 2, 0),\n            DD: values[2],\n            HH: values[3],\n            mm: values[4],\n            ss: values[5],\n            SSS:values[6],\n            D: values[2],\n            MMMM: month_names[lang][+values[1]],\n            MMM: month_names[lang][+values[1]]\n        };\n\n        let str = format_string;\n        const formatted_values = [];\n\n        Object.keys(format_map)\n            .sort((a, b) => b.length - a.length) // big string first\n            .forEach(key => {\n                if (str.includes(key)) {\n                    str = str.replace(key, `$${formatted_values.length}`);\n                    formatted_values.push(format_map[key]);\n                }\n            });\n\n        formatted_values.forEach((value, i) => {\n            str = str.replace(`$${i}`, value);\n        });\n\n        return str;\n    },\n\n    diff(date_a, date_b, scale = DAY) {\n        let milliseconds, seconds, hours, minutes, days, months, years;\n\n        milliseconds = date_a - date_b;\n        seconds = milliseconds / 1000;\n        minutes = seconds / 60;\n        hours = minutes / 60;\n        days = hours / 24;\n        months = days / 30;\n        years = months / 12;\n\n        if (!scale.endsWith('s')) {\n            scale += 's';\n        }\n\n        return Math.floor(\n            {\n                milliseconds,\n                seconds,\n                minutes,\n                hours,\n                days,\n                months,\n                years\n            }[scale]\n        );\n    },\n\n    today() {\n        const vals = this.get_date_values(new Date()).slice(0, 3);\n        return new Date(...vals);\n    },\n\n    now() {\n        return new Date();\n    },\n\n    add(date, qty, scale) {\n        qty = parseInt(qty, 10);\n        const vals = [\n            date.getFullYear() + (scale === YEAR ? qty : 0),\n            date.getMonth() + (scale === MONTH ? qty : 0),\n            date.getDate() + (scale === DAY ? qty : 0),\n            date.getHours() + (scale === HOUR ? qty : 0),\n            date.getMinutes() + (scale === MINUTE ? qty : 0),\n            date.getSeconds() + (scale === SECOND ? qty : 0),\n            date.getMilliseconds() + (scale === MILLISECOND ? qty : 0)\n        ];\n        return new Date(...vals);\n    },\n\n    start_of(date, scale) {\n        const scores = {\n            [YEAR]: 6,\n            [MONTH]: 5,\n            [DAY]: 4,\n            [HOUR]: 3,\n            [MINUTE]: 2,\n            [SECOND]: 1,\n            [MILLISECOND]: 0\n        };\n\n        function should_reset(_scale) {\n            const max_score = scores[scale];\n            return scores[_scale] <= max_score;\n        }\n\n        const vals = [\n            date.getFullYear(),\n            should_reset(YEAR) ? 0 : date.getMonth(),\n            should_reset(MONTH) ? 1 : date.getDate(),\n            should_reset(DAY) ? 0 : date.getHours(),\n            should_reset(HOUR) ? 0 : date.getMinutes(),\n            should_reset(MINUTE) ? 0 : date.getSeconds(),\n            should_reset(SECOND) ? 0 : date.getMilliseconds()\n        ];\n\n        return new Date(...vals);\n    },\n\n    clone(date) {\n        return new Date(...this.get_date_values(date));\n    },\n\n    get_date_values(date) {\n        return [\n            date.getFullYear(),\n            date.getMonth(),\n            date.getDate(),\n            date.getHours(),\n            date.getMinutes(),\n            date.getSeconds(),\n            date.getMilliseconds()\n        ];\n    },\n\n    get_days_in_month(date) {\n        const no_of_days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n        const month = date.getMonth();\n\n        if (month !== 1) {\n            return no_of_days[month];\n        }\n\n        // Feb\n        const year = date.getFullYear();\n        if ((year % 4 == 0 && year % 100 != 0) || year % 400 == 0) {\n            return 29;\n        }\n        return 28;\n    }\n};\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart\nfunction padStart(str, targetLength, padString) {\n    str = str + '';\n    targetLength = targetLength >> 0;\n    padString = String(typeof padString !== 'undefined' ? padString : ' ');\n    if (str.length > targetLength) {\n        return String(str);\n    } else {\n        targetLength = targetLength - str.length;\n        if (targetLength > padString.length) {\n            padString += padString.repeat(targetLength / padString.length);\n        }\n        return padString.slice(0, targetLength) + String(str);\n    }\n}\n","export function $(expr, con) {\n    return typeof expr === 'string'\n        ? (con || document).querySelector(expr)\n        : expr || null;\n}\n\nexport function createSVG(tag, attrs) {\n    const elem = document.createElementNS('http://www.w3.org/2000/svg', tag);\n    for (let attr in attrs) {\n        if (attr === 'append_to') {\n            const parent = attrs.append_to;\n            parent.appendChild(elem);\n        } else if (attr === 'innerHTML') {\n            elem.innerHTML = attrs.innerHTML;\n        } else {\n            elem.setAttribute(attr, attrs[attr]);\n        }\n    }\n    return elem;\n}\n\nexport function animateSVG(svgElement, attr, from, to) {\n    const animatedSvgElement = getAnimationElement(svgElement, attr, from, to);\n\n    if (animatedSvgElement === svgElement) {\n        // triggered 2nd time programmatically\n        // trigger artificial click event\n        const event = document.createEvent('HTMLEvents');\n        event.initEvent('click', true, true);\n        event.eventName = 'click';\n        animatedSvgElement.dispatchEvent(event);\n    }\n}\n\nfunction getAnimationElement(\n    svgElement,\n    attr,\n    from,\n    to,\n    dur = '0.4s',\n    begin = '0.1s'\n) {\n    const animEl = svgElement.querySelector('animate');\n    if (animEl) {\n        $.attr(animEl, {\n            attributeName: attr,\n            from,\n            to,\n            dur,\n            begin: 'click + ' + begin // artificial click\n        });\n        return svgElement;\n    }\n\n    const animateElement = createSVG('animate', {\n        attributeName: attr,\n        from,\n        to,\n        dur,\n        begin,\n        calcMode: 'spline',\n        values: from + ';' + to,\n        keyTimes: '0; 1',\n        keySplines: cubic_bezier('ease-out')\n    });\n    svgElement.appendChild(animateElement);\n\n    return svgElement;\n}\n\nfunction cubic_bezier(name) {\n    return {\n        ease: '.25 .1 .25 1',\n        linear: '0 0 1 1',\n        'ease-in': '.42 0 1 1',\n        'ease-out': '0 0 .58 1',\n        'ease-in-out': '.42 0 .58 1'\n    }[name];\n}\n\n$.on = (element, event, selector, callback) => {\n    if (!callback) {\n        callback = selector;\n        $.bind(element, event, callback);\n    } else {\n        $.delegate(element, event, selector, callback);\n    }\n};\n\n$.off = (element, event, handler) => {\n    element.removeEventListener(event, handler);\n};\n\n$.bind = (element, event, callback) => {\n    event.split(/\\s+/).forEach(function(event) {\n        element.addEventListener(event, callback);\n    });\n};\n\n$.delegate = (element, event, selector, callback) => {\n    element.addEventListener(event, function(e) {\n        const delegatedTarget = e.target.closest(selector);\n        if (delegatedTarget) {\n            e.delegatedTarget = delegatedTarget;\n            callback.call(this, e, delegatedTarget);\n        }\n    });\n};\n\n$.closest = (selector, element) => {\n    if (!element) return null;\n\n    if (element.matches(selector)) {\n        return element;\n    }\n\n    return $.closest(selector, element.parentNode);\n};\n\n$.attr = (element, attr, value) => {\n    if (!value && typeof attr === 'string') {\n        return element.getAttribute(attr);\n    }\n\n    if (typeof attr === 'object') {\n        for (let key in attr) {\n            $.attr(element, key, attr[key]);\n        }\n        return;\n    }\n\n    element.setAttribute(attr, value);\n};\n","import date_utils from './date_utils';\nimport { $, createSVG, animateSVG } from './svg_utils';\n\nexport default class Bar {\n    constructor(gantt, task) {\n        this.set_defaults(gantt, task);\n        this.prepare();\n        this.draw();\n        this.bind();\n    }\n\n    set_defaults(gantt, task) {\n        this.action_completed = false;\n        this.gantt = gantt;\n        this.task = task;\n    }\n\n    prepare() {\n        this.prepare_values();\n        this.prepare_helpers();\n    }\n\n    prepare_values() {\n        this.invalid = this.task.invalid;\n        this.height = this.gantt.options.bar_height;\n        this.x = this.compute_x();\n        this.y = this.compute_y();\n        this.corner_radius = this.gantt.options.bar_corner_radius;\n        this.duration =\n            date_utils.diff(this.task._end, this.task._start, 'hour') /\n            this.gantt.options.step;\n        this.width = this.gantt.options.column_width * this.duration;\n        this.progress_width =\n            this.gantt.options.column_width *\n                this.duration *\n                (this.task.progress / 100) || 0;\n        this.group = createSVG('g', {\n            class: 'bar-wrapper ' + (this.task.custom_class || ''),\n            'data-id': this.task.id\n        });\n        this.bar_group = createSVG('g', {\n            class: 'bar-group',\n            append_to: this.group\n        });\n        this.handle_group = createSVG('g', {\n            class: 'handle-group',\n            append_to: this.group\n        });\n    }\n\n    prepare_helpers() {\n        SVGElement.prototype.getX = function() {\n            return +this.getAttribute('x');\n        };\n        SVGElement.prototype.getY = function() {\n            return +this.getAttribute('y');\n        };\n        SVGElement.prototype.getWidth = function() {\n            return +this.getAttribute('width');\n        };\n        SVGElement.prototype.getHeight = function() {\n            return +this.getAttribute('height');\n        };\n        SVGElement.prototype.getEndX = function() {\n            return this.getX() + this.getWidth();\n        };\n    }\n\n    draw() {\n        this.draw_bar();\n        this.draw_progress_bar();\n        this.draw_label();\n        this.draw_resize_handles();\n    }\n\n    draw_bar() {\n        this.$bar = createSVG('rect', {\n            x: this.x,\n            y: this.y,\n            width: this.width,\n            height: this.height,\n            rx: this.corner_radius,\n            ry: this.corner_radius,\n            class: 'bar',\n            append_to: this.bar_group\n        });\n\n        animateSVG(this.$bar, 'width', 0, this.width);\n\n        if (this.invalid) {\n            this.$bar.classList.add('bar-invalid');\n        }\n    }\n\n    draw_progress_bar() {\n        if (this.invalid) return;\n        this.$bar_progress = createSVG('rect', {\n            x: this.x,\n            y: this.y,\n            width: this.progress_width,\n            height: this.height,\n            rx: this.corner_radius,\n            ry: this.corner_radius,\n            class: 'bar-progress',\n            append_to: this.bar_group\n        });\n\n        animateSVG(this.$bar_progress, 'width', 0, this.progress_width);\n    }\n\n    draw_label() {\n        createSVG('text', {\n            x: this.x + this.width / 2,\n            y: this.y + this.height / 2,\n            innerHTML: this.task.name,\n            class: 'bar-label',\n            append_to: this.bar_group\n        });\n        // labels get BBox in the next tick\n        requestAnimationFrame(() => this.update_label_position());\n    }\n\n    draw_resize_handles() {\n        if (this.invalid) return;\n\n        const bar = this.$bar;\n        const handle_width = 8;\n\n        createSVG('rect', {\n            x: bar.getX() + bar.getWidth() - 9,\n            y: bar.getY() + 1,\n            width: handle_width,\n            height: this.height - 2,\n            rx: this.corner_radius,\n            ry: this.corner_radius,\n            class: 'handle right',\n            append_to: this.handle_group\n        });\n\n        createSVG('rect', {\n            x: bar.getX() + 1,\n            y: bar.getY() + 1,\n            width: handle_width,\n            height: this.height - 2,\n            rx: this.corner_radius,\n            ry: this.corner_radius,\n            class: 'handle left',\n            append_to: this.handle_group\n        });\n\n        if (this.task.progress && this.task.progress < 100) {\n            this.$handle_progress = createSVG('polygon', {\n                points: this.get_progress_polygon_points().join(','),\n                class: 'handle progress',\n                append_to: this.handle_group\n            });\n        }\n    }\n\n    get_progress_polygon_points() {\n        const bar_progress = this.$bar_progress;\n        return [\n            bar_progress.getEndX() - 5,\n            bar_progress.getY() + bar_progress.getHeight(),\n            bar_progress.getEndX() + 5,\n            bar_progress.getY() + bar_progress.getHeight(),\n            bar_progress.getEndX(),\n            bar_progress.getY() + bar_progress.getHeight() - 8.66\n        ];\n    }\n\n    bind() {\n        if (this.invalid) return;\n        this.setup_click_event();\n    }\n\n    setup_click_event() {\n        $.on(this.group, 'focus ' + this.gantt.options.popup_trigger, e => {\n            if (this.action_completed) {\n                // just finished a move action, wait for a few seconds\n                return;\n            }\n\n            this.show_popup();\n            this.gantt.unselect_all();\n            this.group.classList.add('active');\n        });\n\n        $.on(this.group, 'dblclick', e => {\n            if (this.action_completed) {\n                // just finished a move action, wait for a few seconds\n                return;\n            }\n\n            this.gantt.trigger_event('click', [this.task]);\n        });\n    }\n\n    show_popup() {\n        if (this.gantt.bar_being_dragged) return;\n\n        const start_date = date_utils.format(this.task._start, 'MMM D', this.gantt.options.language);\n        const end_date = date_utils.format(\n            date_utils.add(this.task._end, -1, 'second'),\n            'MMM D',\n            this.gantt.options.language\n        );\n        const subtitle = start_date + ' - ' + end_date;\n\n        this.gantt.show_popup({\n            target_element: this.$bar,\n            title: this.task.name,\n            subtitle: subtitle,\n            task: this.task,\n        });\n    }\n\n    update_bar_position({ x = null, width = null }) {\n        const bar = this.$bar;\n        if (x) {\n            // get all x values of parent task\n            const xs = this.task.dependencies.map(dep => {\n                return this.gantt.get_bar(dep).$bar.getX();\n            });\n            // child task must not go before parent\n            const valid_x = xs.reduce((prev, curr) => {\n                return x >= curr;\n            }, x);\n            if (!valid_x) {\n                width = null;\n                return;\n            }\n            this.update_attr(bar, 'x', x);\n        }\n        if (width && width >= this.gantt.options.column_width) {\n            this.update_attr(bar, 'width', width);\n        }\n        this.update_label_position();\n        this.update_handle_position();\n        this.update_progressbar_position();\n        this.update_arrow_position();\n    }\n\n    date_changed() {\n        let changed = false;\n        const { new_start_date, new_end_date } = this.compute_start_end_date();\n\n        if (Number(this.task._start) !== Number(new_start_date)) {\n            changed = true;\n            this.task._start = new_start_date;\n        }\n\n        if (Number(this.task._end) !== Number(new_end_date)) {\n            changed = true;\n            this.task._end = new_end_date;\n        }\n\n        if (!changed) return;\n\n        this.gantt.trigger_event('date_change', [\n            this.task,\n            new_start_date,\n            date_utils.add(new_end_date, -1, 'second')\n        ]);\n    }\n\n    progress_changed() {\n        const new_progress = this.compute_progress();\n        this.task.progress = new_progress;\n        this.gantt.trigger_event('progress_change', [this.task, new_progress]);\n    }\n\n    set_action_completed() {\n        this.action_completed = true;\n        setTimeout(() => (this.action_completed = false), 1000);\n    }\n\n    compute_start_end_date() {\n        const bar = this.$bar;\n        const x_in_units = bar.getX() / this.gantt.options.column_width;\n        const new_start_date = date_utils.add(\n            this.gantt.gantt_start,\n            x_in_units * this.gantt.options.step,\n            'hour'\n        );\n        const width_in_units = bar.getWidth() / this.gantt.options.column_width;\n        const new_end_date = date_utils.add(\n            new_start_date,\n            width_in_units * this.gantt.options.step,\n            'hour'\n        );\n\n        return { new_start_date, new_end_date };\n    }\n\n    compute_progress() {\n        const progress =\n            this.$bar_progress.getWidth() / this.$bar.getWidth() * 100;\n        return parseInt(progress, 10);\n    }\n\n    compute_x() {\n        const { step, column_width } = this.gantt.options;\n        const task_start = this.task._start;\n        const gantt_start = this.gantt.gantt_start;\n\n        const diff = date_utils.diff(task_start, gantt_start, 'hour');\n        let x = diff / step * column_width;\n\n        if (this.gantt.view_is('Month')) {\n            const diff = date_utils.diff(task_start, gantt_start, 'day');\n            x = diff * column_width / 30;\n        }\n        return x;\n    }\n\n    compute_y() {\n        return (\n            this.gantt.options.header_height +\n            this.gantt.options.padding +\n            this.task._index * (this.height + this.gantt.options.padding)\n        );\n    }\n\n    get_snap_position(dx) {\n        let odx = dx,\n            rem,\n            position;\n\n        if (this.gantt.view_is('Week')) {\n            rem = dx % (this.gantt.options.column_width / 7);\n            position =\n                odx -\n                rem +\n                (rem < this.gantt.options.column_width / 14\n                    ? 0\n                    : this.gantt.options.column_width / 7);\n        } else if (this.gantt.view_is('Month')) {\n            rem = dx % (this.gantt.options.column_width / 30);\n            position =\n                odx -\n                rem +\n                (rem < this.gantt.options.column_width / 60\n                    ? 0\n                    : this.gantt.options.column_width / 30);\n        } else {\n            rem = dx % this.gantt.options.column_width;\n            position =\n                odx -\n                rem +\n                (rem < this.gantt.options.column_width / 2\n                    ? 0\n                    : this.gantt.options.column_width);\n        }\n        return position;\n    }\n\n    update_attr(element, attr, value) {\n        value = +value;\n        if (!isNaN(value)) {\n            element.setAttribute(attr, value);\n        }\n        return element;\n    }\n\n    update_progressbar_position() {\n        this.$bar_progress.setAttribute('x', this.$bar.getX());\n        this.$bar_progress.setAttribute(\n            'width',\n            this.$bar.getWidth() * (this.task.progress / 100)\n        );\n    }\n\n    update_label_position() {\n        const bar = this.$bar,\n            label = this.group.querySelector('.bar-label');\n\n        if (label.getBBox().width > bar.getWidth()) {\n            label.classList.add('big');\n            label.setAttribute('x', bar.getX() + bar.getWidth() + 5);\n        } else {\n            label.classList.remove('big');\n            label.setAttribute('x', bar.getX() + bar.getWidth() / 2);\n        }\n    }\n\n    update_handle_position() {\n        const bar = this.$bar;\n        this.handle_group\n            .querySelector('.handle.left')\n            .setAttribute('x', bar.getX() + 1);\n        this.handle_group\n            .querySelector('.handle.right')\n            .setAttribute('x', bar.getEndX() - 9);\n        const handle = this.group.querySelector('.handle.progress');\n        handle &&\n            handle.setAttribute('points', this.get_progress_polygon_points());\n    }\n\n    update_arrow_position() {\n        this.arrows = this.arrows || [];\n        for (let arrow of this.arrows) {\n            arrow.update();\n        }\n    }\n}\n\nfunction isFunction(functionToCheck) {\n    var getType = {};\n    return (\n        functionToCheck &&\n        getType.toString.call(functionToCheck) === '[object Function]'\n    );\n}\n","import { createSVG } from './svg_utils';\n\nexport default class Arrow {\n    constructor(gantt, from_task, to_task) {\n        this.gantt = gantt;\n        this.from_task = from_task;\n        this.to_task = to_task;\n\n        this.calculate_path();\n        this.draw();\n    }\n\n    calculate_path() {\n        let start_x =\n            this.from_task.$bar.getX() + this.from_task.$bar.getWidth() / 2;\n\n        const condition = () =>\n            this.to_task.$bar.getX() < start_x + this.gantt.options.padding &&\n            start_x > this.from_task.$bar.getX() + this.gantt.options.padding;\n\n        while (condition()) {\n            start_x -= 10;\n        }\n\n        const start_y =\n            this.gantt.options.header_height +\n            this.gantt.options.bar_height +\n            (this.gantt.options.padding + this.gantt.options.bar_height) *\n                this.from_task.task._index +\n            this.gantt.options.padding;\n\n        const end_x = this.to_task.$bar.getX() - this.gantt.options.padding / 2;\n        const end_y =\n            this.gantt.options.header_height +\n            this.gantt.options.bar_height / 2 +\n            (this.gantt.options.padding + this.gantt.options.bar_height) *\n                this.to_task.task._index +\n            this.gantt.options.padding;\n\n        const from_is_below_to =\n            this.from_task.task._index > this.to_task.task._index;\n        const curve = this.gantt.options.arrow_curve;\n        const clockwise = from_is_below_to ? 1 : 0;\n        const curve_y = from_is_below_to ? -curve : curve;\n        const offset = from_is_below_to\n            ? end_y + this.gantt.options.arrow_curve\n            : end_y - this.gantt.options.arrow_curve;\n\n        this.path = `\n            M ${start_x} ${start_y}\n            V ${offset}\n            a ${curve} ${curve} 0 0 ${clockwise} ${curve} ${curve_y}\n            L ${end_x} ${end_y}\n            m -5 -5\n            l 5 5\n            l -5 5`;\n\n        if (\n            this.to_task.$bar.getX() <\n            this.from_task.$bar.getX() + this.gantt.options.padding\n        ) {\n            const down_1 = this.gantt.options.padding / 2 - curve;\n            const down_2 =\n                this.to_task.$bar.getY() +\n                this.to_task.$bar.getHeight() / 2 -\n                curve_y;\n            const left = this.to_task.$bar.getX() - this.gantt.options.padding;\n\n            this.path = `\n                M ${start_x} ${start_y}\n                v ${down_1}\n                a ${curve} ${curve} 0 0 1 -${curve} ${curve}\n                H ${left}\n                a ${curve} ${curve} 0 0 ${clockwise} -${curve} ${curve_y}\n                V ${down_2}\n                a ${curve} ${curve} 0 0 ${clockwise} ${curve} ${curve_y}\n                L ${end_x} ${end_y}\n                m -5 -5\n                l 5 5\n                l -5 5`;\n        }\n    }\n\n    draw() {\n        this.element = createSVG('path', {\n            d: this.path,\n            'data-from': this.from_task.task.id,\n            'data-to': this.to_task.task.id\n        });\n    }\n\n    update() {\n        this.calculate_path();\n        this.element.setAttribute('d', this.path);\n    }\n}\n","export default class Popup {\n    constructor(parent, custom_html) {\n        this.parent = parent;\n        this.custom_html = custom_html;\n        this.make();\n    }\n\n    make() {\n        this.parent.innerHTML = `\n            <div class=\"title\"></div>\n            <div class=\"subtitle\"></div>\n            <div class=\"pointer\"></div>\n        `;\n\n        this.hide();\n\n        this.title = this.parent.querySelector('.title');\n        this.subtitle = this.parent.querySelector('.subtitle');\n        this.pointer = this.parent.querySelector('.pointer');\n    }\n\n    show(options) {\n        if (!options.target_element) {\n            throw new Error('target_element is required to show popup');\n        }\n        if (!options.position) {\n            options.position = 'left';\n        }\n        const target_element = options.target_element;\n\n        if (this.custom_html) {\n            let html = this.custom_html(options.task);\n            html += '<div class=\"pointer\"></div>';\n            this.parent.innerHTML = html;\n            this.pointer = this.parent.querySelector('.pointer');\n        } else {\n            // set data\n            this.title.innerHTML = options.title;\n            this.subtitle.innerHTML = options.subtitle;\n            this.parent.style.width = this.parent.clientWidth + 'px';\n        }\n\n        // set position\n        let position_meta;\n        if (target_element instanceof HTMLElement) {\n            position_meta = target_element.getBoundingClientRect();\n        } else if (target_element instanceof SVGElement) {\n            position_meta = options.target_element.getBBox();\n        }\n\n        if (options.position === 'left') {\n            this.parent.style.left =\n                position_meta.x + (position_meta.width + 10) + 'px';\n            this.parent.style.top = position_meta.y + 'px';\n\n            this.pointer.style.transform = 'rotateZ(90deg)';\n            this.pointer.style.left = '-7px';\n            this.pointer.style.top = '2px';\n        }\n\n        // show\n        this.parent.style.opacity = 1;\n    }\n\n    hide() {\n        this.parent.style.opacity = 0;\n        this.parent.style.left = 0;\n    }\n}\n","import date_utils from './date_utils';\nimport { $, createSVG } from './svg_utils';\nimport Bar from './bar';\nimport Arrow from './arrow';\nimport Popup from './popup';\n\nconst VIEW_MODE = {\n    QUARTER_DAY: 'Quarter Day',\n    HALF_DAY: 'Half Day',\n    DAY: 'Day',\n    WEEK: 'Week',\n    MONTH: 'Month',\n    YEAR: 'Year'\n};\n// 按每组个数切分数组\nconst arrayChunk = (arr, size) => Array.from({ length: Math.ceil(arr.length / size) }, (v, i) => arr.slice(i * size, i * size + size));\n\nexport default class Gantt {\n    constructor(wrapper, tasks, options) {\n        this.setup_wrapper(wrapper);\n        this.setup_options(options);\n        this.setup_tasks(tasks);\n        // initialize with default view mode\n        this.change_view_mode();\n        this.bind_events();\n    }\n\n    setup_wrapper(element) {\n        let svg_element, wrapper_element;\n\n        // CSS Selector is passed\n        if (typeof element === 'string') {\n            element = document.querySelector(element);\n        }\n\n        // get the SVGElement\n        if (element instanceof HTMLElement) {\n            wrapper_element = element;\n            svg_element = element.querySelector('svg');\n        } else if (element instanceof SVGElement) {\n            svg_element = element;\n        } else {\n            throw new TypeError(\n                'Frappé Gantt only supports usage of a string CSS selector,' +\n                    \" HTML DOM element or SVG DOM element for the 'element' parameter\"\n            );\n        }\n\n        // svg element\n        if (!svg_element) {\n            // create it\n            this.$svg = createSVG('svg', {\n                append_to: wrapper_element,\n                class: 'gantt'\n            });\n        } else {\n            this.$svg = svg_element;\n            this.$svg.classList.add('gantt');\n        }\n\n        // wrapper element\n        this.$container = document.createElement('div');\n        this.$container.classList.add('gantt-container');\n\n        const parent_element = this.$svg.parentElement;\n        parent_element.appendChild(this.$container);\n        this.$container.appendChild(this.$svg);\n\n        // popup wrapper\n        this.popup_wrapper = document.createElement('div');\n        this.popup_wrapper.classList.add('popup-wrapper');\n        this.$container.appendChild(this.popup_wrapper);\n    }\n\n    setup_options(options) {\n        const default_options = {\n            header_height: 50,\n            column_width: 30,\n            step: 24,\n            view_modes: [...Object.values(VIEW_MODE)],\n            bar_height: 20,\n            bar_corner_radius: 3,\n            arrow_curve: 5,\n            padding: 18,\n            view_mode: 'Day',\n            date_format: 'YYYY-MM-DD',\n            popup_trigger: 'click',\n            custom_popup_html: null,\n            language: 'zh'\n        };\n        this.options = Object.assign({}, default_options, options);\n    }\n\n    setup_tasks(tasks) {\n        // prepare tasks\n        this.tasks = tasks.map((task, i) => {\n            // convert to Date objects\n            task._start = date_utils.parse(task.start);\n            task._end = date_utils.parse(task.end);\n\n            // make task invalid if duration too large\n            if (date_utils.diff(task._end, task._start, 'year') > 10) {\n                task.end = null;\n            }\n\n            // cache index\n            task._index = i;\n\n            // invalid dates\n            if (!task.start && !task.end) {\n                const today = date_utils.today();\n                task._start = today;\n                task._end = date_utils.add(today, 2, 'day');\n            }\n\n            if (!task.start && task.end) {\n                task._start = date_utils.add(task._end, -2, 'day');\n            }\n\n            if (task.start && !task.end) {\n                task._end = date_utils.add(task._start, 2, 'day');\n            }\n\n            // if hours is not set, assume the last day is full day\n            // e.g: 2018-09-09 becomes 2018-09-09 23:59:59\n            const task_end_values = date_utils.get_date_values(task._end);\n            if (task_end_values.slice(3).every(d => d === 0)) {\n                task._end = date_utils.add(task._end, 24, 'hour');\n            }\n\n            // invalid flag\n            if (!task.start || !task.end) {\n                task.invalid = true;\n            }\n\n            // dependencies\n            if (typeof task.dependencies === 'string' || !task.dependencies) {\n                let deps = [];\n                if (task.dependencies) {\n                    deps = task.dependencies\n                        .split(',')\n                        .map(d => d.trim())\n                        .filter(d => d);\n                }\n                task.dependencies = deps;\n            }\n\n            // uids\n            if (!task.id) {\n                task.id = generate_id(task);\n            }\n\n            return task;\n        });\n\n        this.setup_dependencies();\n    }\n\n    setup_dependencies() {\n        this.dependency_map = {};\n        for (let t of this.tasks) {\n            for (let d of t.dependencies) {\n                this.dependency_map[d] = this.dependency_map[d] || [];\n                this.dependency_map[d].push(t.id);\n            }\n        }\n    }\n\n    refresh(tasks) {\n        this.setup_tasks(tasks);\n        this.change_view_mode();\n    }\n\n    change_view_mode(mode = this.options.view_mode) {\n        this.update_view_scale(mode);\n        this.setup_dates();\n        this.render();\n        // fire viewmode_change event\n        this.trigger_event('view_change', [mode]);\n    }\n\n    update_view_scale(view_mode) {\n        this.options.view_mode = view_mode;\n\n        if (view_mode === VIEW_MODE.DAY) {\n            this.options.step = 24;\n            this.options.column_width = 38;\n        } else if (view_mode === VIEW_MODE.HALF_DAY) {\n            this.options.step = 24 / 2;\n            this.options.column_width = 38;\n        } else if (view_mode === VIEW_MODE.QUARTER_DAY) {\n            this.options.step = 24 / 4;\n            this.options.column_width = 38;\n        } else if (view_mode === VIEW_MODE.WEEK) {\n            this.options.step = 24 * 7;\n            this.options.column_width = 140;\n        } else if (view_mode === VIEW_MODE.MONTH) {\n            this.options.step = 24 * 30;\n            this.options.column_width = 120;\n        } else if (view_mode === VIEW_MODE.YEAR) {\n            this.options.step = 24 * 365;\n            this.options.column_width = 120;\n        }\n    }\n\n    setup_dates() {\n        this.setup_gantt_dates();\n        this.setup_date_values();\n    }\n\n    setup_gantt_dates() {\n        this.gantt_start = this.gantt_end = null;\n\n        for (let task of this.tasks) {\n            // set global start and end date\n            if (!this.gantt_start || task._start < this.gantt_start) {\n                this.gantt_start = task._start;\n            }\n            if (!this.gantt_end || task._end > this.gantt_end) {\n                this.gantt_end = task._end;\n            }\n        }\n\n        this.gantt_start = date_utils.start_of(this.gantt_start, 'day');\n        this.gantt_end = date_utils.start_of(this.gantt_end, 'day');\n\n        // add date padding on both sides\n        if (this.view_is([VIEW_MODE.QUARTER_DAY, VIEW_MODE.HALF_DAY])) {\n            this.gantt_start = date_utils.add(this.gantt_start, -7, 'day');\n            this.gantt_end = date_utils.add(this.gantt_end, 7, 'day');\n        } else if (this.view_is(VIEW_MODE.MONTH)) {\n            this.gantt_start = date_utils.start_of(this.gantt_start, 'year');\n            this.gantt_end = date_utils.add(this.gantt_end, 1, 'year');\n        } else if (this.view_is(VIEW_MODE.YEAR)) {\n            this.gantt_start = date_utils.add(this.gantt_start, -2, 'year');\n            this.gantt_end = date_utils.add(this.gantt_end, 2, 'year');\n        } else {\n            this.gantt_start = date_utils.add(this.gantt_start, -1, 'month');\n            this.gantt_end = date_utils.add(this.gantt_end, 1, 'month');\n        }\n    }\n\n    setup_date_values() {\n        this.dates = [];\n        let cur_date = null;\n\n        while (cur_date === null || cur_date < this.gantt_end) {\n            if (!cur_date) {\n                cur_date = date_utils.clone(this.gantt_start);\n            } else {\n                if (this.view_is(VIEW_MODE.YEAR)) {\n                    cur_date = date_utils.add(cur_date, 1, 'year');\n                } else if (this.view_is(VIEW_MODE.MONTH)) {\n                    cur_date = date_utils.add(cur_date, 1, 'month');\n                } else {\n                    cur_date = date_utils.add(\n                        cur_date,\n                        this.options.step,\n                        'hour'\n                    );\n                }\n            }\n            this.dates.push(cur_date);\n        }\n    }\n\n    bind_events() {\n        this.bind_grid_click();\n        this.bind_bar_events();\n    }\n\n    asyncChunkRender(callback) {\n        // 300条为一组\n        const chunkList = arrayChunk(this.tasks, 300);\n        const chunkLen = chunkList.length;\n\n        let index = 0;\n        this.$container.onscroll = (e) => {\n            const { scrollTop } = this.$container;\n            const grid_height = this.grid_height || 0;\n            const offsetTop = grid_height - (index + 1) * 1000; // 触发阈值\n\n            if (\n                scrollTop > 0 && grid_height > 1000 &&\n                (scrollTop > offsetTop) &&\n                (index < chunkLen - 1)\n            ) {\n                index++;\n                // console.log('异步加载', index);\n                callback && callback(chunkList[index]);\n            }\n        }\n        callback && callback(chunkList[index]);\n    }\n\n    render() {\n        this.clear();\n        this.setup_layers();\n\n        // make_grid start;\n        this.make_grid_header();\n        this.make_grid_ticks();\n        this.make_grid_highlights();\n        // make_grid end;\n\n        this.make_dates();\n        \n        // 分批处理\n        this.asyncChunkRender(tasks => {\n            this.make_grid_background(tasks);\n            this.make_grid_rows(tasks);\n            this.make_bars(tasks);\n            this.make_arrows(tasks);\n        });\n        \n        this.map_arrows_on_bars();\n        // 宽度只设置一次\n        this.set_width();\n        this.set_scroll_position();\n    }\n\n    setup_layers() {\n        this.layers = {};\n        const layers = ['grid', 'date', 'arrow', 'progress', 'bar', 'details'];\n        // make group layers\n        for (let layer of layers) {\n            this.layers[layer] = createSVG('g', {\n                class: layer,\n                append_to: this.$svg\n            });\n        }\n    }\n\n    // 绘制grid\n    make_grid() {\n        this.make_grid_background();\n        this.make_grid_rows();\n        this.make_grid_header();\n        this.make_grid_ticks();\n        this.make_grid_highlights();\n    }\n\n    make_grid_background(tasks) {\n        const grid_width = this.dates.length * this.options.column_width;\n        // 当前任务列表的高度\n        const task_height =\n            this.options.header_height +\n            this.options.padding +\n            (this.options.bar_height + this.options.padding) * tasks.length;\n        const grid_height = (this.grid_height || 0) + task_height;\n\n        // 暂存高度\n        this.grid_height = grid_height;\n\n        // 背景占位 没有就创建 有则更改高度\n        if (!this.$backgroundRect) {\n            this.$backgroundRect = createSVG('rect', {\n                x: 0,\n                y: 0,\n                width: grid_width,\n                height: grid_height,\n                class: 'grid-background',\n                append_to: this.layers.grid\n            });\n        } else {\n            $.attr(this.$backgroundRect, {\n                height: grid_height,\n            });\n        }\n\n        $.attr(this.$svg, {\n            height: grid_height + this.options.padding + 40\n        });\n    }\n    \n    // 绘制svg 任务行【关键1】\n    make_grid_rows(tasks) {\n        // 注意不要重复创建分组 偏移y、y1、y2需要累加\n        if (!this.rows_layer) {\n            this.rows_layer = createSVG('g', { class: 'rows-layer', append_to: this.layers.grid });\n        }\n        if (!this.lines_layer) {\n            this.lines_layer = createSVG('g', { class: 'lines-layer', append_to: this.layers.grid });\n        }\n\n        const row_width = this.dates.length * this.options.column_width;\n        const row_height = this.options.bar_height + this.options.padding;\n\n        // 初始偏移量 有历史则使用历史偏移量 保证能累加\n        let row_y = this.options.header_height + this.options.padding / 2;\n        if (this.rowOffsetY) {\n            row_y = this.rowOffsetY;\n        }\n\n        for (let task of tasks) {\n            // 横条y偏移\n            const gridRowY = row_y;\n            createSVG('rect', {\n                x: 0,\n                y: gridRowY, //\n                width: row_width,\n                height: row_height,\n                class: 'grid-row',\n                append_to: this.rows_layer\n            });\n\n            // 分割线y1,y2偏移\n            const rowLineY = row_y + row_height;\n            createSVG('line', {\n                x1: 0,\n                y1: rowLineY,\n                x2: row_width,\n                y2: rowLineY,\n                class: 'row-line',\n                append_to: this.lines_layer\n            });\n\n            row_y += this.options.bar_height + this.options.padding;\n        }\n        // 循环结束 记录历史偏移量\n        this.rowOffsetY = row_y;\n    }\n\n    make_grid_header() {\n        const header_width = this.dates.length * this.options.column_width;\n        const header_height = this.options.header_height + 10;\n        createSVG('rect', {\n            x: 0,\n            y: 0,\n            width: header_width,\n            height: header_height,\n            class: 'grid-header',\n            append_to: this.layers.grid\n        });\n    }\n\n    make_grid_ticks() {\n        let tick_x = 0;\n        let tick_y = this.options.header_height + this.options.padding / 2;\n        let tick_height =\n            (this.options.bar_height + this.options.padding) *\n            this.tasks.length;\n\n        for (let date of this.dates) {\n            let tick_class = 'tick';\n            // thick tick for monday\n            if (this.view_is(VIEW_MODE.DAY) && date.getDate() === 1) {\n                tick_class += ' thick';\n            }\n            // thick tick for first week\n            if (\n                this.view_is(VIEW_MODE.WEEK) &&\n                date.getDate() >= 1 &&\n                date.getDate() < 8\n            ) {\n                tick_class += ' thick';\n            }\n            // thick ticks for quarters\n            if (this.view_is(VIEW_MODE.MONTH) && (date.getMonth() + 1) % 3 === 0) {\n                tick_class += ' thick';\n            }\n\n            createSVG('path', {\n                d: `M ${tick_x} ${tick_y} v ${tick_height}`,\n                class: tick_class,\n                append_to: this.layers.grid\n            });\n\n            if (this.view_is(VIEW_MODE.MONTH)) {\n                tick_x +=\n                    date_utils.get_days_in_month(date) *\n                    this.options.column_width /\n                    30;\n            } else {\n                tick_x += this.options.column_width;\n            }\n        }\n    }\n\n    make_grid_highlights() {\n        // highlight today's date\n        if (this.view_is(VIEW_MODE.DAY)) {\n            const x =\n                date_utils.diff(date_utils.today(), this.gantt_start, 'hour') /\n                this.options.step *\n                this.options.column_width;\n            const y = 0;\n\n            const width = this.options.column_width;\n            const height =\n                (this.options.bar_height + this.options.padding) *\n                    this.tasks.length +\n                this.options.header_height +\n                this.options.padding / 2;\n\n            createSVG('rect', {\n                x,\n                y,\n                width,\n                height,\n                class: 'today-highlight',\n                append_to: this.layers.grid\n            });\n        }\n    }\n\n    make_dates() {\n        for (let date of this.get_dates_to_draw()) {\n            createSVG('text', {\n                x: date.lower_x,\n                y: date.lower_y,\n                innerHTML: date.lower_text,\n                class: 'lower-text',\n                append_to: this.layers.date\n            });\n\n            if (date.upper_text) {\n                const $upper_text = createSVG('text', {\n                    x: date.upper_x,\n                    y: date.upper_y,\n                    innerHTML: date.upper_text,\n                    class: 'upper-text',\n                    append_to: this.layers.date\n                });\n\n                // remove out-of-bound dates\n                if (\n                    $upper_text.getBBox().x2 > this.layers.grid.getBBox().width\n                ) {\n                    $upper_text.remove();\n                }\n            }\n        }\n    }\n\n    get_dates_to_draw() {\n        let last_date = null;\n        const dates = this.dates.map((date, i) => {\n            const d = this.get_date_info(date, last_date, i);\n            last_date = date;\n            return d;\n        });\n        return dates;\n    }\n\n    get_date_info(date, last_date, i) {\n        if (!last_date) {\n            last_date = date_utils.add(date, 1, 'year');\n        }\n        const date_text = {\n            'Quarter Day_lower': date_utils.format(\n                date,\n                'HH',\n                this.options.language\n            ),\n            'Half Day_lower': date_utils.format(\n                date,\n                'HH',\n                this.options.language\n            ),\n            Day_lower:\n                date.getDate() !== last_date.getDate()\n                    ? date_utils.format(date, 'D', this.options.language)\n                    : '',\n            Week_lower:\n                date.getMonth() !== last_date.getMonth()\n                    ? date_utils.format(date, 'D MMM', this.options.language)\n                    : date_utils.format(date, 'D', this.options.language),\n            Month_lower: date_utils.format(date, 'MMMM', this.options.language),\n            Year_lower: date_utils.format(date, 'YYYY', this.options.language),\n            'Quarter Day_upper':\n                date.getDate() !== last_date.getDate()\n                    ? date_utils.format(date, 'D MMM', this.options.language)\n                    : '',\n            'Half Day_upper':\n                date.getDate() !== last_date.getDate()\n                    ? date.getMonth() !== last_date.getMonth()\n                      ? date_utils.format(date, 'D MMM', this.options.language)\n                      : date_utils.format(date, 'D', this.options.language)\n                    : '',\n            Day_upper:\n                date.getMonth() !== last_date.getMonth()\n                    ? date_utils.format(date, 'MMMM', this.options.language)\n                    : '',\n            Week_upper:\n                date.getMonth() !== last_date.getMonth()\n                    ? date_utils.format(date, 'MMMM', this.options.language)\n                    : '',\n            Month_upper:\n                date.getFullYear() !== last_date.getFullYear()\n                    ? date_utils.format(date, 'YYYY', this.options.language)\n                    : '',\n            Year_upper:\n                date.getFullYear() !== last_date.getFullYear()\n                    ? date_utils.format(date, 'YYYY', this.options.language)\n                    : ''\n        };\n\n        const base_pos = {\n            x: i * this.options.column_width,\n            lower_y: this.options.header_height,\n            upper_y: this.options.header_height - 25\n        };\n\n        const x_pos = {\n            'Quarter Day_lower': this.options.column_width * 4 / 2,\n            'Quarter Day_upper': 0,\n            'Half Day_lower': this.options.column_width * 2 / 2,\n            'Half Day_upper': 0,\n            Day_lower: this.options.column_width / 2,\n            Day_upper: this.options.column_width * 30 / 2,\n            Week_lower: 0,\n            Week_upper: this.options.column_width * 4 / 2,\n            Month_lower: this.options.column_width / 2,\n            Month_upper: this.options.column_width * 12 / 2,\n            Year_lower: this.options.column_width / 2,\n            Year_upper: this.options.column_width * 30 / 2\n        };\n\n        return {\n            upper_text: date_text[`${this.options.view_mode}_upper`],\n            lower_text: date_text[`${this.options.view_mode}_lower`],\n            upper_x: base_pos.x + x_pos[`${this.options.view_mode}_upper`],\n            upper_y: base_pos.upper_y,\n            lower_x: base_pos.x + x_pos[`${this.options.view_mode}_lower`],\n            lower_y: base_pos.lower_y\n        };\n    }\n\n    // 绘制柱状图 【关键3】\n    make_bars(tasks) {\n        const bars = tasks.map(task => {\n            const bar = new Bar(this, task);\n            this.layers.bar.appendChild(bar.group);\n            return bar;\n        });\n        this.bars = [...(this.bars || []), ...bars];\n    }\n    // 绘制箭头 【关键2】\n    make_arrows(tasks) {\n        const arrows = [];\n        for (let task of tasks) {\n            task.dependencies\n                .map(task_id => {\n                    const dependency = this.get_task(task_id);\n                    if (!dependency) return;\n                    const arrow = new Arrow(\n                        this,\n                        this.bars[dependency._index], // from_task\n                        this.bars[task._index] // to_task\n                    );\n                    this.layers.arrow.appendChild(arrow.element);\n                    arrows.push(arrow);\n                    return arrow;\n                })\n                .filter(Boolean); // filter falsy values\n        }\n        this.arrows = [...(this.arrows || []), ...arrows];\n    }\n\n    map_arrows_on_bars() {\n        for (let bar of this.bars) {\n            bar.arrows = this.arrows.filter(arrow => {\n                return (\n                    arrow.from_task.task.id === bar.task.id ||\n                    arrow.to_task.task.id === bar.task.id\n                );\n            });\n        }\n    }\n\n    set_width() {\n        const cur_width = this.$svg.getBoundingClientRect().width;\n        const actual_width = this.$svg\n            .querySelector('.grid .grid-row')\n            .getAttribute('width');\n        if (cur_width < actual_width) {\n            this.$svg.setAttribute('width', actual_width);\n        }\n    }\n\n    set_scroll_position() {\n        const parent_element = this.$svg.parentElement;\n        if (!parent_element) return;\n\n        const hours_before_first_task = date_utils.diff(\n            this.get_oldest_starting_date(),\n            this.gantt_start,\n            'hour'\n        );\n\n        const scroll_pos =\n            hours_before_first_task /\n                this.options.step *\n                this.options.column_width -\n            this.options.column_width;\n\n        parent_element.scrollLeft = scroll_pos;\n    }\n\n    bind_grid_click() {\n        $.on(\n            this.$svg,\n            this.options.popup_trigger,\n            '.grid-row, .grid-header',\n            () => {\n                this.unselect_all();\n                this.hide_popup();\n            }\n        );\n    }\n\n    bind_bar_events() {\n        let is_dragging = false;\n        let x_on_start = 0;\n        let y_on_start = 0;\n        let is_resizing_left = false;\n        let is_resizing_right = false;\n        let parent_bar_id = null;\n        let bars = []; // instanceof Bar\n        this.bar_being_dragged = null;\n\n        function action_in_progress() {\n            return is_dragging || is_resizing_left || is_resizing_right;\n        }\n\n        $.on(this.$svg, 'mousedown', '.bar-wrapper, .handle', (e, element) => {\n            const bar_wrapper = $.closest('.bar-wrapper', element);\n\n            if (element.classList.contains('left')) {\n                is_resizing_left = true;\n            } else if (element.classList.contains('right')) {\n                is_resizing_right = true;\n            } else if (element.classList.contains('bar-wrapper')) {\n                is_dragging = true;\n            }\n\n            bar_wrapper.classList.add('active');\n\n            x_on_start = e.offsetX;\n            y_on_start = e.offsetY;\n\n            parent_bar_id = bar_wrapper.getAttribute('data-id');\n            const ids = [\n                parent_bar_id,\n                ...this.get_all_dependent_tasks(parent_bar_id)\n            ];\n            bars = ids.map(id => this.get_bar(id));\n\n            this.bar_being_dragged = parent_bar_id;\n\n            bars.forEach(bar => {\n                const $bar = bar.$bar;\n                $bar.ox = $bar.getX();\n                $bar.oy = $bar.getY();\n                $bar.owidth = $bar.getWidth();\n                $bar.finaldx = 0;\n            });\n        });\n\n        $.on(this.$svg, 'mousemove', e => {\n            if (!action_in_progress()) return;\n            const dx = e.offsetX - x_on_start;\n            const dy = e.offsetY - y_on_start;\n\n            bars.forEach(bar => {\n                const $bar = bar.$bar;\n                $bar.finaldx = this.get_snap_position(dx);\n                this.hide_popup();\n                if (is_resizing_left) {\n                    if (parent_bar_id === bar.task.id) {\n                        bar.update_bar_position({\n                            x: $bar.ox + $bar.finaldx,\n                            width: $bar.owidth - $bar.finaldx\n                        });\n                    } else {\n                        bar.update_bar_position({\n                            x: $bar.ox + $bar.finaldx\n                        });\n                    }\n                } else if (is_resizing_right) {\n                    if (parent_bar_id === bar.task.id) {\n                        bar.update_bar_position({\n                            width: $bar.owidth + $bar.finaldx\n                        });\n                    }\n                } else if (is_dragging) {\n                    bar.update_bar_position({ x: $bar.ox + $bar.finaldx });\n                }\n            });\n        });\n\n        document.addEventListener('mouseup', e => {\n            if (is_dragging || is_resizing_left || is_resizing_right) {\n                bars.forEach(bar => bar.group.classList.remove('active'));\n            }\n\n            is_dragging = false;\n            is_resizing_left = false;\n            is_resizing_right = false;\n        });\n\n        $.on(this.$svg, 'mouseup', e => {\n            this.bar_being_dragged = null;\n            bars.forEach(bar => {\n                const $bar = bar.$bar;\n                if (!$bar.finaldx) return;\n                bar.date_changed();\n                bar.set_action_completed();\n            });\n        });\n\n        this.bind_bar_progress();\n    }\n\n    bind_bar_progress() {\n        let x_on_start = 0;\n        let y_on_start = 0;\n        let is_resizing = null;\n        let bar = null;\n        let $bar_progress = null;\n        let $bar = null;\n\n        $.on(this.$svg, 'mousedown', '.handle.progress', (e, handle) => {\n            is_resizing = true;\n            x_on_start = e.offsetX;\n            y_on_start = e.offsetY;\n\n            const $bar_wrapper = $.closest('.bar-wrapper', handle);\n            const id = $bar_wrapper.getAttribute('data-id');\n            bar = this.get_bar(id);\n\n            $bar_progress = bar.$bar_progress;\n            $bar = bar.$bar;\n\n            $bar_progress.finaldx = 0;\n            $bar_progress.owidth = $bar_progress.getWidth();\n            $bar_progress.min_dx = -$bar_progress.getWidth();\n            $bar_progress.max_dx = $bar.getWidth() - $bar_progress.getWidth();\n        });\n\n        $.on(this.$svg, 'mousemove', e => {\n            if (!is_resizing) return;\n            let dx = e.offsetX - x_on_start;\n            let dy = e.offsetY - y_on_start;\n\n            if (dx > $bar_progress.max_dx) {\n                dx = $bar_progress.max_dx;\n            }\n            if (dx < $bar_progress.min_dx) {\n                dx = $bar_progress.min_dx;\n            }\n\n            const $handle = bar.$handle_progress;\n            $.attr($bar_progress, 'width', $bar_progress.owidth + dx);\n            $.attr($handle, 'points', bar.get_progress_polygon_points());\n            $bar_progress.finaldx = dx;\n        });\n\n        $.on(this.$svg, 'mouseup', () => {\n            is_resizing = false;\n            if (!($bar_progress && $bar_progress.finaldx)) return;\n            bar.progress_changed();\n            bar.set_action_completed();\n        });\n    }\n\n    get_all_dependent_tasks(task_id) {\n        let out = [];\n        let to_process = [task_id];\n        while (to_process.length) {\n            const deps = to_process.reduce((acc, curr) => {\n                acc = acc.concat(this.dependency_map[curr]);\n                return acc;\n            }, []);\n\n            out = out.concat(deps);\n            to_process = deps.filter(d => !to_process.includes(d));\n        }\n\n        return out.filter(Boolean);\n    }\n\n    get_snap_position(dx) {\n        let odx = dx,\n            rem,\n            position;\n\n        if (this.view_is(VIEW_MODE.WEEK)) {\n            rem = dx % (this.options.column_width / 7);\n            position =\n                odx -\n                rem +\n                (rem < this.options.column_width / 14\n                    ? 0\n                    : this.options.column_width / 7);\n        } else if (this.view_is(VIEW_MODE.MONTH)) {\n            rem = dx % (this.options.column_width / 30);\n            position =\n                odx -\n                rem +\n                (rem < this.options.column_width / 60\n                    ? 0\n                    : this.options.column_width / 30);\n        } else {\n            rem = dx % this.options.column_width;\n            position =\n                odx -\n                rem +\n                (rem < this.options.column_width / 2\n                    ? 0\n                    : this.options.column_width);\n        }\n        return position;\n    }\n\n    unselect_all() {\n        [...this.$svg.querySelectorAll('.bar-wrapper')].forEach(el => {\n            el.classList.remove('active');\n        });\n    }\n\n    view_is(modes) {\n        if (typeof modes === 'string') {\n            return this.options.view_mode === modes;\n        }\n\n        if (Array.isArray(modes)) {\n            return modes.some(mode => this.options.view_mode === mode);\n        }\n\n        return false;\n    }\n\n    get_task(id) {\n        return this.tasks.find(task => {\n            return task.id === id;\n        });\n    }\n\n    get_bar(id) {\n        return this.bars.find(bar => {\n            return bar.task.id === id;\n        });\n    }\n\n    show_popup(options) {\n        if (!this.popup) {\n            this.popup = new Popup(\n                this.popup_wrapper,\n                this.options.custom_popup_html\n            );\n        }\n        this.popup.show(options);\n    }\n\n    hide_popup() {\n        this.popup && this.popup.hide();\n    }\n\n    trigger_event(event, args) {\n        if (this.options['on_' + event]) {\n            this.options['on_' + event].apply(null, args);\n        }\n    }\n\n    /**\n     * Gets the oldest starting date from the list of tasks\n     *\n     * @returns Date\n     * @memberof Gantt\n     */\n    get_oldest_starting_date() {\n        return this.tasks\n            .map(task => task._start)\n            .reduce(\n                (prev_date, cur_date) =>\n                    cur_date <= prev_date ? cur_date : prev_date\n            );\n    }\n\n    /**\n     * Clear all elements from the parent svg element\n     *\n     * @memberof Gantt\n     */\n    clear() {\n        this.$svg.innerHTML = '';\n    }\n}\n\nGantt.VIEW_MODE = VIEW_MODE;\n\nfunction generate_id(task) {\n    return (\n        task.name +\n        '_' +\n        Math.random()\n            .toString(36)\n            .slice(2, 12)\n    );\n}\n"],"names":["month_names","en","es","ru","ptBr","fr","tr","zh","[object Object]","date","date_separator","time_separator","Date","date_parts","time_parts","parts","split","map","val","parseInt","vals","length","parseFloat","concat","with_time","TypeError","this","get_date_values","i","padStart","date_string","time_string","format_string","lang","values","d","format_map","YYYY","MM","DD","HH","mm","ss","SSS","D","MMMM","MMM","str","formatted_values","Object","keys","sort","a","b","forEach","key","includes","replace","push","value","date_a","date_b","scale","milliseconds","seconds","hours","minutes","days","months","years","endsWith","Math","floor","slice","now","qty","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","scores","year","month","day","hour","minute","second","millisecond","should_reset","_scale","max_score","no_of_days","targetLength","padString","String","repeat","$","expr","con","document","querySelector","createSVG","tag","attrs","elem","createElementNS","attr","append_to","appendChild","innerHTML","setAttribute","animateSVG","svgElement","from","to","animatedSvgElement","dur","begin","animEl","attributeName","animateElement","calcMode","keyTimes","keySplines","name","ease","linear","ease-in","ease-out","ease-in-out","getAnimationElement","event","createEvent","initEvent","eventName","dispatchEvent","on","element","selector","callback","delegate","bind","off","handler","removeEventListener","addEventListener","e","delegatedTarget","target","closest","call","matches","parentNode","getAttribute","Bar","gantt","task","set_defaults","prepare","draw","action_completed","prepare_values","prepare_helpers","invalid","height","options","bar_height","x","compute_x","y","compute_y","corner_radius","bar_corner_radius","duration","date_utils","diff","_end","_start","step","width","column_width","progress_width","progress","group","class","custom_class","data-id","id","bar_group","handle_group","SVGElement","prototype","getX","getY","getWidth","getHeight","getEndX","draw_bar","draw_progress_bar","draw_label","draw_resize_handles","$bar","rx","ry","classList","add","$bar_progress","requestAnimationFrame","update_label_position","bar","$handle_progress","points","get_progress_polygon_points","join","bar_progress","setup_click_event","popup_trigger","show_popup","unselect_all","trigger_event","bar_being_dragged","subtitle","format","language","target_element","title","dependencies","dep","get_bar","reduce","prev","curr","update_attr","update_handle_position","update_progressbar_position","update_arrow_position","changed","new_start_date","new_end_date","compute_start_end_date","Number","new_progress","compute_progress","setTimeout","x_in_units","gantt_start","width_in_units","task_start","view_is","header_height","padding","_index","dx","rem","position","odx","isNaN","label","getBBox","remove","handle","arrows","arrow","update","Arrow","from_task","to_task","calculate_path","start_x","condition","start_y","end_x","end_y","from_is_below_to","curve","arrow_curve","clockwise","curve_y","offset","path","down_1","down_2","left","data-from","data-to","Popup","parent","custom_html","make","hide","pointer","Error","html","style","clientWidth","position_meta","HTMLElement","getBoundingClientRect","top","transform","opacity","VIEW_MODE","QUARTER_DAY","HALF_DAY","DAY","WEEK","MONTH","YEAR","arrayChunk","arr","size","Array","ceil","v","Gantt","wrapper","tasks","setup_wrapper","setup_options","setup_tasks","change_view_mode","bind_events","svg_element","wrapper_element","$svg","$container","createElement","parentElement","popup_wrapper","default_options","view_modes","view_mode","date_format","custom_popup_html","assign","parse","start","end","today","every","deps","trim","filter","random","toString","generate_id","setup_dependencies","dependency_map","t","mode","update_view_scale","setup_dates","render","setup_gantt_dates","setup_date_values","gantt_end","start_of","dates","cur_date","clone","bind_grid_click","bind_bar_events","chunkList","chunkLen","index","onscroll","scrollTop","grid_height","clear","setup_layers","make_grid_header","make_grid_ticks","make_grid_highlights","make_dates","asyncChunkRender","make_grid_background","make_grid_rows","make_bars","make_arrows","map_arrows_on_bars","set_width","set_scroll_position","layers","layer","grid_width","task_height","$backgroundRect","grid","rows_layer","lines_layer","row_width","row_height","row_y","rowOffsetY","rowLineY","x1","y1","x2","y2","tick_x","tick_y","tick_height","tick_class","get_days_in_month","get_dates_to_draw","lower_x","lower_y","lower_text","upper_text","$upper_text","upper_x","upper_y","last_date","get_date_info","date_text","Quarter Day_lower","Half Day_lower","Day_lower","Week_lower","Month_lower","Year_lower","Quarter Day_upper","Half Day_upper","Day_upper","Week_upper","Month_upper","Year_upper","base_pos","x_pos","bars","task_id","dependency","get_task","Boolean","cur_width","actual_width","parent_element","scroll_pos","get_oldest_starting_date","scrollLeft","hide_popup","is_dragging","x_on_start","y_on_start","is_resizing_left","is_resizing_right","parent_bar_id","bar_wrapper","contains","offsetX","offsetY","ids","get_all_dependent_tasks","ox","oy","owidth","finaldx","get_snap_position","update_bar_position","date_changed","set_action_completed","bind_bar_progress","is_resizing","min_dx","max_dx","$handle","progress_changed","out","to_process","acc","querySelectorAll","el","modes","isArray","some","find","popup","show","args","apply","prev_date"],"mappings":"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"}